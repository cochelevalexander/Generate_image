# Программа для расчета прямых звеньев редуктора
# Шестерня ведет, зубчатка ведется
# При расчете шестерни, ее данные не учитываются. При зубчатке, учитываются все.
T1 = 11.5 #float(input('Введите нагрузку на первое звено, H*м \n'))
T2 = 24 #float(input('Введите нагрузку на второе звено, H*м \n'))
T3 = 89.5#float(input('Введите нагрузку на третье звено, H*м \n'))
T4 = 214.7#float(input('Введите нагрузку на четвертое звено, H*м \n'))
T5 = 482.05#float(input('Введите нагрузку на пятое звено, H*м \n'))
nome1 =float(input('Введите звено для расчета: \n'))
nome2 = float(input('Введите второе звено для расчета: \n'))
Nh0 =140000000 #float(input('Введите Nн0 для рассчитываемых звеньев:  \n'))
t = 18393#float(input('Введите кол-во часов работы \n' ))
Sh =1.2 #float(input('Введите Sн \n' ))
Qh_max = 2400 #float(input('[Qh]max в МПа \n' ))
Qh0h = 1050 #float(input('Введите Qh0 - шестерни \n'))
Qh0z = 1400 #float(input('Введите Qh0 - зубчатого колеса \n'))
Qf0h = 650 #float(input('Введите Qf0 - шестерни \n'))
Qf0z = 750 #float(input('Введите Qf0 - зубчатого колеса \n'))
Qfh_max = 1000 #float(input('Введите [Qf]max - шестерни \n'))
Qfhz_max =1200 #float(input('Введите [Qf]max - зубчатого колеса \n'))
Nf0 = (4 * (10 ** 6))
Kfc = 0.75
fic = float(input('Введите коэффициент ψ_ba'))
Sf =  float(input('Введите Sf  \n'))
c = max(T1,T2,T3,T4,T5)
if nome1 == 5 and nome2 == 4:
    n4 = float(input('Введите кол-во об\мин 4-го звена \n'))
    n5 = float(input('Введите кол-во об\мин 5-го звена \n'))
    u = float(input('Введите передаточное отношение между звеньями'))
    # Расчет на кол-во циклов
    Nheh = float(60 * (((T1/c) +(T2/c) +(T3/c) +(T4/c ))**3)*n4 *t)
    Nhezk = float(60 * (((T1/c) +(T2/c) +(T3/c) +(T4/c )+(T5/c ))**3)*n5 *t)
    print('Nhe_ш',Nheh,'циклов')
    print('Nhe_з.к', Nhezk, 'циклов')
    # Расчет коэффициента долговечности
    KhlH = float(pow((Nh0 / Nheh),1/6))
    KhlZ = float(pow((Nh0 / Nhezk), 1 / 6))
    if 1 <= KhlH <= 2.4:
        print('Khl', KhlH, ' - коэффициент долговечности шестерни')
    else:
        print('Khl', KhlH, ' - коэффициент долговечности шестерни')
        print('Рассчет времени на ремонт:')
        t_rem_h = (Nh0*t)/Nheh
        print(t_rem_h,'часов')
    if 1 <= KhlZ <= 2.4:
        print('Khl', KhlZ, ' - коэффициент долговечности зубчатого колеса')
    else:
        print('Khl', KhlZ, ' - коэффициент долговечности зубчатого колеса')
        print('Рассчет времени на ремонт:')
        t_rem_z = (Nh0*t)/Nhezk
        print(t_rem_z, 'часов')
    Qhh = (Qh0h * KhlH)/Sh
    if Qhh <= Qh_max:
        print(Qhh,'<=',Qh_max, ' - Условие выполнено')
    else:
        print('Необходим перерасчет')
    Qhz = (Qh0z * KhlZ)/Sh
    if Qhz <= Qh_max:
        print(Qhz,'<=',Qh_max, ' - Условие выполнено')
    else:
        print('Необходим перерасчет')
    Nfeh = Nheh
    print(Nfeh,' - количество циклов перемены напряжений за весь срок службы работы шестерни')
    Nfez = Nhezk
    print(Nfez,' - количество циклов перемены напряжений за весь срок службы работы зубчатого колеса')
    # Пока что с твердостью больше 350 HB
    Kflh = pow((Nf0/Nfeh),(1/9))
    print(Kflh ,' - Коэффициент долговечности шестеренки')
    if 1<=Kflh<=2.4:
        print(Kflh ,' - Коэффициент долговечности шестеренки')
    else:
        print('Необходим расчет времени на ремонт')
        t_rem_hkf = (Nf0 * t) / Nfeh
        print('ремонт каждые ', t_rem_hkf, ' -  часов')
    Kflz = pow((Nf0/Nfez),(1/9))
    print(Kflz ,' - Коэффициент долговечности зубчатого колеса')
    if 1<=Kflz<=2.4:
        print(Kflz ,' - Коэффициент долговечности зубчатого колеса')
    else:
        print('Необходим расчет времени на ремонт')
        t_rem_zkf = (Nf0 * t) / Nfez
        print('ремонт каждые ',t_rem_zkf, ' - часов')
    # Находим допускаемые напряжения при изгибе
    Qfh = (Qf0h/Sf) * Kflh * Kfc
    print(Qfh,'- Доспускаемые напряжения при изгибе шестерни')
    Qfz = (Qf0z/Sf) * Kflz * Kfc
    print(Qfz,'- Доспускаемые напряжения при изгибе зубчатого колеса ')
    # Предварительный расчет межосевого расстояния колес
    c = ((2.1*(10**5))*T5*1.03)/((((Qh_max*(10**6))**2) * (u**2)) * fic)
    y = pow(c,(1/3))
    a = y  *0.85*(u+1)
    a = a * 100000
    print('Межосевое расстояние', a , 'мм')
    if a <= 40:
        a = 40
    elif a >= 40 and a <= 50:
        a = 50
    elif a >= 50 and a <= 63:
        a = 63
    elif a >= 63 and a <= 80:
        a = 80
    elif a >= 80 and a <= 100:
        a = 100
    elif a >= 100 and a <= 125:
        a = 125
    elif a >= 125 and a <= 160:
        a = 160
    elif a >= 160 and a <= 200:
        a = 200
    elif a >= 200 and a <= 250:
        a = 250
    elif a >= 250 and a <= 315:
        a = 315
    elif a >= 315 and a <= 400:
        a = 400
    print(a,' - Межосевое расстояние по ГОСТ')
    # Определим ширину колеса
    bw = fic*a
    print('Ширина колеса: ', bw, 'мм')
    # Определим модуль
    m = bw/15
    print('Модуль =',m,'мм')
    #Суммарное число зубьев передачи
    Zsum = (2*a)/m
    print('Суммарное число зубьев передачи =', Zsum, 'мм')
    Z1 = int(Zsum/(u+1))
    Z2 = int(Zsum - Z1)
    print('Число зубьев первой передачи: ', Z1)
    print('Число зубьев второй передачи: ', Z2)
    #Фактическое передаточное число
    Uper = Z2/Z1
    print('Фактическое передаточное отношение: ', Uper)
    d1 = m*Z1
    print('Диаметр 1-го колеса:', d1)
    d2 = m*Z2
    print('Диаметр 2-го колеса:', d2)